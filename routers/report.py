import logging
from aiogram import types
from aiogram.enums.chat_member_status import ChatMemberStatus
from aiogram.enums import ParseMode
from settings import bot


async def get_chat_admins(chat_id):
    try:
        logging.info(f"Trying to get administrators for chat ID: {chat_id}")
        chat_admins = await bot.get_chat_administrators(chat_id)
        logging.info(f"Chat administrators retrieved: {chat_admins}")
        admin_ids = [admin.user.id for admin in chat_admins if admin.status in [ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR]]
        logging.info(f"Admin IDs: {admin_ids}")
        return admin_ids
    except Exception as e:
        logging.error(f"Failed to get chat administrators: {e}")
        return []

async def report_user(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç.")
        return

    reported_user = message.reply_to_message.from_user
    from_user = message.from_user
    chat_title = message.chat.title
    from_user_name = from_user.username or from_user.first_name
    reported_user_name = reported_user.username or reported_user.first_name
    message_id = message.reply_to_message.message_id
    message_link = f"[—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ](https://t.me/{message.chat.username}/{message_id})"
    message_text = message.reply_to_message.text or "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

    admin_ids = await get_chat_admins(message.chat.id)

    if reported_user.id in admin_ids:
        await message.reply("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    if from_user.id in admin_ids:
        await message.reply("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –º–æ–≥—É—Ç –ø–æ–¥–∞–≤–∞—Ç—å —Ä–µ–ø–æ—Ä—Ç—ã.")
        return

    report_message = (
        f"üö® *–†–µ–ø–æ—Ä—Ç –≤ —á–∞—Ç–µ {chat_title}* üö®\n\n"
        f"üë§ –ñ–∞–ª–æ–±–∞ –Ω–∞: {reported_user_name}\n"
        f"üì© –û—Ç: {from_user_name}\n\n"
        f"–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_link}\n\n"
        f"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n{message_text}"
    )

    if not admin_ids:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    for admin_id in admin_ids:
        try:
            await bot.send_message(admin_id, report_message, parse_mode=ParseMode.MARKDOWN)
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")

    await message.reply("‚úÖ –†–µ–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.")
